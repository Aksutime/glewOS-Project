import random
from random import randint
import time
import os
import sys
import signal; signal.signal(signal.SIGINT, signal.SIG_IGN)
sys.excepthook = lambda type, value, traceback: None if issubclass(type, KeyboardInterrupt) else sys.__excepthook__(type, value, traceback)

os.system("clear")
time.sleep(0.5)
print("glewOS")
time.sleep(2)

os.system("clear")

time.sleep(1)
print("[init] initting os as ib")
time.sleep(0.1)
print("[init] initting memref as imr")
time.sleep(0.1)
print("[init] initting sysconf as isc")
time.sleep(0.1)
print("[init] initting bootconfig as ibc")
time.sleep(0.5)
os.system("clear")
time.sleep(0.1)
print("[load] loading glewkernel as krnlload process")
time.sleep(0.1)
print("[load] loading carbonboot as crbnboot")
time.sleep(0.1)
print("[load] loading easyprocmanager as epm")
time.sleep(0.1)
print("[load] loading libreader as lr")
time.sleep(0.1)
print("[load] loading libprocesser as lp")
time.sleep(0.5)
os.system("clear")
time.sleep(0.1)
print("[import] importing pkgmngr as pm")
time.sleep(0.1)
print("[import] importing imgmngr as im")
time.sleep(0.1)
print("[import] importing main images")
time.sleep(0.1)
print("[import] importing main packages")
time.sleep(0.1)
print("[import] importing libexplorer")
time.sleep(0.1)
print("[import] importing imgreader")
time.sleep(0.1)
print("[import] importing compboard")
time.sleep(0.1)
print("[import] importing mainengine")
time.sleep(0.1)
print("[import] importing taskboard")
time.sleep(0.1)
print("[import] importing mainmanager")
time.sleep(0.5)
os.system("clear")
time.sleep(0.1)
print("[call] loading called files")
time.sleep(2)
os.system("clear")
print("glewOS Project")
print("glewOS Isnt Available Yet")
print("glewOS Project Github Page:")
print("https://github.com/Aksutime/glewOS-Project")

